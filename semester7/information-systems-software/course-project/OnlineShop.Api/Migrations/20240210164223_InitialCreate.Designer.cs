// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OnlineShop.Api.Data;

#nullable disable

namespace OnlineShop.Api.Migrations
{
    [DbContext(typeof(ShopDbContext))]
    [Migration("20240210164223_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OnlineShop.Api.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PickupPointId")
                        .HasColumnType("integer");

                    b.Property<float>("Total")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("orders", (string)null);
                });

            modelBuilder.Entity("OnlineShop.Api.Entities.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("order_items", (string)null);
                });

            modelBuilder.Entity("OnlineShop.Api.Entities.PickupPoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("pickup_points", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "ул. Ленина, 4",
                            City = "Новосибирск"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Юбилейный проспект, 59",
                            City = "Бердск"
                        });
                });

            modelBuilder.Entity("OnlineShop.Api.Entities.Smartphone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BatteryCapacity")
                        .HasColumnType("integer");

                    b.Property<int>("Cores")
                        .HasColumnType("integer");

                    b.Property<float>("CurrentPrice")
                        .HasColumnType("real");

                    b.Property<float>("DefaultPrice")
                        .HasColumnType("real");

                    b.Property<float>("Diagonal")
                        .HasColumnType("real");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OS")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RAM")
                        .HasColumnType("integer");

                    b.Property<int>("ReleaseYear")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("smartphones", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BatteryCapacity = 2018,
                            Cores = 6,
                            CurrentPrice = 45999f,
                            DefaultPrice = 49999f,
                            Diagonal = 4.7f,
                            ImageUrl = "/images/iphoneSE.png",
                            Model = "Apple Iphone SE",
                            OS = "iOS 15",
                            RAM = 4,
                            ReleaseYear = 2022
                        },
                        new
                        {
                            Id = 2,
                            BatteryCapacity = 5000,
                            Cores = 8,
                            CurrentPrice = 6499f,
                            DefaultPrice = 6499f,
                            Diagonal = 6.52f,
                            ImageUrl = "/images/redmiA2.png",
                            Model = "Xiaomi Redmi A2+",
                            OS = "Android 12 Go",
                            RAM = 3,
                            ReleaseYear = 2023
                        },
                        new
                        {
                            Id = 3,
                            BatteryCapacity = 5000,
                            Cores = 8,
                            CurrentPrice = 9899f,
                            DefaultPrice = 9899f,
                            Diagonal = 6.5f,
                            ImageUrl = "/images/galaxyA03.png",
                            Model = "Samsung Galaxy A03",
                            OS = "Android 11 Go",
                            RAM = 2,
                            ReleaseYear = 2021
                        },
                        new
                        {
                            Id = 4,
                            BatteryCapacity = 3000,
                            Cores = 8,
                            CurrentPrice = 5699f,
                            DefaultPrice = 5699f,
                            Diagonal = 6.5f,
                            ImageUrl = "/images/nokiaC20.png",
                            Model = "Nokia C20",
                            OS = "Android 11 Go",
                            RAM = 2,
                            ReleaseYear = 2021
                        },
                        new
                        {
                            Id = 5,
                            BatteryCapacity = 5000,
                            Cores = 8,
                            CurrentPrice = 9499f,
                            DefaultPrice = 9999f,
                            Diagonal = 6.71f,
                            ImageUrl = "/images/redmi12C.png",
                            Model = "Xiaomi Redmi 12C",
                            OS = "Android 12",
                            RAM = 4,
                            ReleaseYear = 2023
                        },
                        new
                        {
                            Id = 6,
                            BatteryCapacity = 4000,
                            Cores = 4,
                            CurrentPrice = 4799f,
                            DefaultPrice = 4799f,
                            Diagonal = 6.6f,
                            ImageUrl = "/images/itelA49.png",
                            Model = "Itel A49",
                            OS = "Android 11 Go",
                            RAM = 2,
                            ReleaseYear = 2022
                        },
                        new
                        {
                            Id = 7,
                            BatteryCapacity = 4000,
                            Cores = 6,
                            CurrentPrice = 71999f,
                            DefaultPrice = 79999f,
                            Diagonal = 6.1f,
                            ImageUrl = "/images/iphone13.png",
                            Model = "Apple iPhone 13",
                            OS = "iOS 15",
                            RAM = 4,
                            ReleaseYear = 2021
                        });
                });

            modelBuilder.Entity("OnlineShop.Api.Entities.OrderItem", b =>
                {
                    b.HasOne("OnlineShop.Api.Entities.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineShop.Api.Entities.Smartphone", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
